// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DeliveryMode {
  FULL_TIME
  PART_TIME
  BLENDED
  ONLINE
}

model Institution {
  id          String   @id @default(cuid())
  slug        String   @unique
  name        String   @unique
  aka         String?
  websiteUrl  String?
  countryCode String?  @default("IE")

  campuses    Campus[]
  courses     Course[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Campus {
  id            String      @id @default(cuid())
  slug          String      @unique
  name          String
  city          String?
  address       String?

  institutionId String
  institution   Institution @relation(fields: [institutionId], references: [id], onDelete: Cascade)

  // For MVP we allow a single campus per course via Course.campusId.
  // If we need multi-campus offerings later, we can introduce a join table CourseCampus.
  courses       Course[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([institutionId])
}

model Course {
  id            String       @id @default(cuid())
  slug          String       @unique
  title         String

  // CAO code may be null for non-CAO routes. It's unique per institution, not globally.
  caoCode       String?
  @@unique([institutionId, caoCode])

  // NFQ & award basics
  nfqLevel      Int?
  award         String?
  durationYears Float?
  deliveryMode  DeliveryMode?
  restricted    Boolean?     @default(false)

  description   String?
  courseUrl     String?

  institutionId String
  institution   Institution  @relation(fields: [institutionId], references: [id], onDelete: Cascade)

  // MVP: optional one-to-one campus link
  campusId      String?
  campus        Campus?      @relation(fields: [campusId], references: [id], onDelete: SetNull)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([institutionId])
  @@index([campusId])
  @@index([nfqLevel])
  @@index([title])
}